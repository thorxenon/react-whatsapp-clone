{"version":3,"sources":["Api.js","firebaseConfig.js","components/ChatListItem.js","components/ChatIntro.js","components/MessageItem.js","components/ChatWindow.js","components/NewChat.js","components/Login.js","App.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","fbPopup","a","provider","auth","FacebookAuthProvider","signInWithPopup","result","addUser","u","collection","doc","id","set","name","avatar","merge","getContactList","userId","list","get","forEach","data","push","addNewChat","user","user2","add","messages","users","newChat","update","chats","FieldValue","arrayUnion","chatId","title","image","width","onChatList","setChatList","onSnapshot","exists","sort","b","undefined","lastMessageDate","seconds","onChatContent","setList","setUsers","sendMessage","chatData","type","body","now","Date","author","date","i","uData","e","lastMessage","onClick","active","useState","time","setTime","useEffect","d","hours","getHours","minutes","getMinutes","className","src","alt","style","justifyContent","backgroundColor","useRef","recognition","SpeechRecognition","window","webkitSpeechRecognition","emojiOpen","setEmojiOpen","text","setText","listening","setListening","Api","current","scrollHeight","offsetHeight","scrollTop","handleSendCLick","color","ref","map","item","key","height","onEmojiClick","emojiObjet","emoji","disableSearchBar","disableSkinTonePicker","placeholder","value","onChange","target","onKeyUp","keyCode","onstart","onend","onresult","results","transcript","start","show","chatList","setShow","handleClose","getList","left","onReceive","handleFacebookLogin","alert","activeChat","setActiveChat","setUser","showNewChat","setShowNewChat","handleLoginData","newUser","uid","displayName","photoURL","fontSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60b40aec.chunk.js","sourcesContent":["import  firebase from 'firebase/app';\r\nimport 'firebase/firebase-auth';\r\nimport 'firebase/firebase-firestore';\r\n\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default {\r\n    fbPopup: async()=>{\r\n        const provider  = new firebase.auth.FacebookAuthProvider();\r\n        let result = await firebaseApp.auth().signInWithPopup(provider);\r\n        return result;\r\n    },\r\n    addUser: async(u)=> {\r\n        await db.collection('users').doc(u.id).set({\r\n            name:u.name,\r\n            avatar: u.avatar\r\n        }, {merge:true});\r\n    },\r\n    getContactList: async(userId)=> {\r\n        let list = [];\r\n\r\n        let results = await db.collection('users').get();\r\n        results.forEach(result =>{\r\n            let data = result.data();\r\n            if(result.id !== userId){\r\n                list.push({\r\n                    id: result.id,\r\n                    name: data.name,\r\n                    avatar: data.avatar\r\n                })\r\n            }\r\n        })\r\n\r\n        return list\r\n    },\r\n    addNewChat: async(user,user2) =>{\r\n        let newChat = await db.collection('chats').add({\r\n            messages: [],\r\n            users:[user.id, user2.id]\r\n        });\r\n\r\n        db.collection('users').doc(user.id).update({\r\n            chats: firebase.firestore.FieldValue.arrayUnion({\r\n                chatId: newChat.id,\r\n                title: user2.name,\r\n                image: user2.avatar,\r\n                width: user2.id\r\n            })\r\n        })\r\n\r\n        db.collection('users').doc(user2.id).update({\r\n            chats: firebase.firestore.FieldValue.arrayUnion({\r\n                chatId: newChat.id,\r\n                title: user.name,\r\n                image: user.avatar,\r\n                width: user.id\r\n            })\r\n        })\r\n    },\r\n    onChatList: (userId, setChatList) =>{\r\n        return db.collection('users').doc(userId).onSnapshot((doc)=>{\r\n            if(doc.exists){\r\n                let data = doc.data();\r\n\r\n                if(data.chats){\r\n                    let chats = [...data.chats];\r\n\r\n                    chats.sort((a, b)=>{\r\n                        if(a.lastMessageDate === undefined){\r\n                            return -1;\r\n                        }\r\n                        if(b.lastMessageDate === undefined){\r\n                            return -1;\r\n                        }\r\n                        if(a.lastMessageDate.seconds < b.lastMessageDate.seconds){\r\n                            return 1;\r\n                        }else{\r\n                            return -1;\r\n                        }\r\n                    })\r\n\r\n                    setChatList(chats);\r\n                }\r\n            }\r\n        })\r\n    },\r\n    onChatContent: (chatId, setList,setUsers) =>{\r\n        return db.collection('chats').doc(chatId).onSnapshot((doc)=>{\r\n            if(doc.exists){\r\n                let data = doc.data();\r\n                setList(data.messages);\r\n                setUsers(data.users);\r\n            }\r\n        });\r\n    },\r\n    sendMessage: async(chatData, userId, type, body, users) =>{\r\n        let now = new Date();\r\n        db.collection('chats').doc(chatData.chatId).update({\r\n            messages: firebase.firestore.FieldValue.arrayUnion({\r\n                type,\r\n                author: userId,\r\n                body,\r\n                date: now\r\n            })\r\n        })\r\n\r\n        for(let i in users){\r\n            let u = await db.collection('users').doc(users[i]).get();\r\n            let uData = u.data();\r\n            if(uData.chats){\r\n                let chats = [...uData.chats];\r\n\r\n                for(let e in chats){\r\n                    if(chats[e].chatId == chatData.chatId){\r\n                        chats[e].lastMessage = body;\r\n                        chats[e].lastMessageDate = now;\r\n                    }\r\n                }\r\n\r\n                await db.collection('users').doc(users[i]).update({\r\n                    chats\r\n                })\r\n            }\r\n        }\r\n    }\r\n}","export default {\r\n    apiKey: \"AIzaSyDMDh5kDmPt56zDySt-BR2W0cvbayMGDO4\",\r\n    authDomain: \"whatsapp-clonee-e8ddf.firebaseapp.com\",\r\n    projectId: \"whatsapp-clonee-e8ddf\",\r\n    storageBucket: \"whatsapp-clonee-e8ddf.appspot.com\",\r\n    messagingSenderId: \"451955604559\",\r\n    appId: \"1:451955604559:web:8784d0b3ec007253823e3a\"\r\n};\r\n  ","import React, {useState, useEffect} from 'react';\r\nimport './ChatListItem.css';\r\n\r\nexport default ({onClick, active, data}) =>{\r\n\r\n    const [time, setTime] = useState('');\r\n\r\n    useEffect(()=>{\r\n        if(data.lastMessageDate > 0){\r\n            let d = new Date(data.lastMessageDate.seconds * 1000);\r\n            let hours = d.getHours();\r\n            let minutes = d.getMinutes();\r\n            hours = hours < 10 ? '0'+hours : hours; \r\n            minutes = minutes < 10 ? '0'+minutes : minutes;\r\n            setTime(`${hours}:${minutes}`); \r\n        }\r\n    },[data])\r\n\r\n    return(\r\n        <div \r\n            className={`chat-list-item ${active ? 'active' : ''}`}\r\n            onClick={onClick}\r\n        >\r\n            <img src={data.image} alt=\"\" className=\"chat-list-item-avatar\"/>\r\n            <div className=\"chat-list-item-lines\">\r\n                <div className=\"chat-list-item-line\">\r\n                    <div className=\"chat-list-item-name\">{data.title}</div>\r\n                    <div className=\"chat-list-item-date\">{time}</div>\r\n                </div>\r\n                <div className=\"chat-list-item-line\">\r\n                    <div className=\"chat-list-item-lastmsg\">\r\n                        <p>{data.lastMessage}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n{/*\"https://www.svgrepo.com/show/170303/avatar.svg\"*/}","import React from 'react';\r\nimport './ChatIntro.css';\r\n\r\nexport default () =>{\r\n    return(\r\n        <div className=\"chat-intro-area\">\r\n            <img src=\"/assets/inicial.png\" alt=\"\"/>\r\n            <h1>Mantenha seu celular conectado</h1>\r\n            <h2>O Whatsapp conecta ao seu telefone para sincronizar as suas mensagens. <br/> Para reduzir o uso de dados, conecte seu telefone a uma rede Wi-Fi.</h2>\r\n        </div>\r\n    );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport './MessageItem.css';\r\n\r\nexport default ({data, user}) =>{\r\n\r\n    const [time, setTime] = useState('');\r\n\r\n    useEffect(()=>{\r\n        if(data.date > 0){\r\n            let d = new Date(data.date.seconds * 1000);\r\n            let hours = d.getHours();\r\n            let minutes = d.getMinutes();\r\n            hours = hours < 10 ? '0'+hours : hours; \r\n            minutes = minutes < 10 ? '0'+minutes : minutes;\r\n            setTime(`${hours}:${minutes}`); \r\n        }\r\n    },[data])\r\n\r\n    return(\r\n        <div\r\n            className=\"message-line\"\r\n            style={{justifyContent:user.id == data.author ? 'flex-end' : 'flex-start'}}\r\n        >\r\n            <div\r\n                className=\"message-item\"\r\n                style={{backgroundColor:user.id === data.author ? '#dcf8c6' : '#fff'}}\r\n            >\r\n                <div className=\"message-text\">{data.body}</div>\r\n                <div className=\"message-date\">{time}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, {useState, useEffect, useRef} from 'react';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport './ChatWindow.css';\r\n\r\nimport Api from './../Api';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\n\r\nimport MessageItem from './MessageItem';\r\n\r\n\r\n\r\nexport default ({user, data}) =>{\r\n\r\n    const body = useRef();\r\n\r\n    let recognition = null;\r\n    let SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if(SpeechRecognition !== undefined){\r\n        recognition = new SpeechRecognition();\r\n    }\r\n\r\n    const [emojiOpen, setEmojiOpen] = useState(false);\r\n    const [text,setText] = useState('');\r\n    const [listening, setListening] = useState(false);\r\n    const [list, setList] = useState([]);\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(()=>{\r\n        setList([]);\r\n        let unsub = Api.onChatContent(data.chatId, setList, setUsers);\r\n        return unsub;\r\n    },[data.chatId])\r\n\r\n    useEffect(()=>{\r\n        if(body.current.scrollHeight > body.current.offsetHeight){\r\n            body.current.scrollTop = body.current.scrollHeight - body.current.offsetHeight\r\n        };\r\n    },[list])\r\n\r\n    const handleEmojiClick = (e, emojiObjet) =>{\r\n        setText(text + emojiObjet.emoji);\r\n    };\r\n\r\n    const handleOpenEmoji = () =>{\r\n        setEmojiOpen(true);\r\n    };\r\n\r\n    const handleCloseEmoji = () =>{\r\n        setEmojiOpen(false);\r\n    };\r\n\r\n    const handleMicClick = () =>{\r\n        if(recognition !== null){\r\n            recognition.onstart = () =>{\r\n                setListening(true);\r\n            };\r\n            recognition.onend = () =>{\r\n                setListening(false);\r\n            }\r\n            recognition.onresult = (e) =>{\r\n                setText(e.results[0][0].transcript);\r\n            }\r\n\r\n            recognition.start();\r\n        };\r\n    };\r\n\r\n    const handleInputKeyUp = (e) =>{\r\n        if(e.keyCode == 13){\r\n            handleSendCLick();\r\n        }\r\n    }\r\n\r\n    const handleSendCLick = () =>{\r\n        if(text !== ''){\r\n            Api.sendMessage(data, user.id, 'text', text,users);\r\n            setText('');\r\n            setEmojiOpen(false);\r\n        }\r\n    };\r\n\r\n    \r\n\r\n\r\n    return(\r\n        <div className=\"chat-window\">\r\n            <div className=\"chat-window-header\">\r\n                <div className=\"chat-window-header-info\">\r\n                    <img className=\"chat-window-avatar\" src={data.image} alt=\"\"/>\r\n                    <div className=\"chat-window-name\">{data.title}</div>\r\n                </div>\r\n                <div className=\"chat-window-header-buttons\">\r\n                    <div className=\"chat-window-btn\">\r\n                        <SearchIcon style={{color:'#919191'}}/>\r\n                    </div>\r\n\r\n                    <div className=\"chat-window-btn\">\r\n                        <AttachFileIcon style={{color:'#919191'}}/>\r\n                    </div>\r\n\r\n                    <div className=\"chat-window-btn\">\r\n                        <MoreVertIcon style={{color:'#919191'}}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div ref={body} className=\"chat-window-body\">\r\n                {list.map((item, key)=>(\r\n                    <MessageItem\r\n                        key={key}\r\n                        data={item}\r\n                        user={user}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            <div\r\n                className=\"chat-window-emojiarea\"\r\n                style={{height: emojiOpen ? '200px' : '0px'}}\r\n                >\r\n                <EmojiPicker\r\n                onEmojiClick={handleEmojiClick}\r\n                    disableSearchBar\r\n                    disableSkinTonePicker\r\n\r\n                />\r\n            </div>\r\n\r\n            <div className=\"chat-window-footer\">\r\n                <div className=\"chat-window-pre\">\r\n                    \r\n                    <div\r\n                        className=\"chat-window-btn\"\r\n                        onClick={handleCloseEmoji}\r\n                        style={{width: emojiOpen ? 40 : 0}}\r\n                    >\r\n                        <CloseIcon style={{color:'#919191'}}/>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"chat-window-btn\"\r\n                        onClick={handleOpenEmoji}\r\n                    >\r\n                        <InsertEmoticonIcon style={{color: emojiOpen ?'#009688' : '#919191'}}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"chat-window-inputarea\">\r\n                    <input\r\n                        className=\"chat-window-input\"\r\n                        type=\"text\"\r\n                        placeholder=\"Digite uma mensagem\"\r\n                        value={text}\r\n                        onChange={e=>setText(e.target.value)}\r\n                        onKeyUp={handleInputKeyUp}\r\n                    />\r\n                </div>\r\n                <div className=\"chat-window-pos\">\r\n                    {text === '' &&\r\n\r\n                        <div onClick={handleMicClick} className=\"chat-window-btn\">\r\n                            <MicIcon style={{color: listening ? '#126ECE' : '#919191'}}/>\r\n                        </div>\r\n                    }\r\n\r\n                    {text !== '' &&\r\n\r\n                        <div onClick={handleSendCLick} className=\"chat-window-btn\">\r\n                            <SendIcon style={{color:'#919191'}}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport './NewChat.css';\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Api from '../Api';\r\n\r\nexport default ({user, chatList, show, setShow}) =>{\r\n\r\n    const [list,setList] = useState([]);\r\n\r\n    const handleClose = () =>{\r\n        setShow(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const getList  = async() =>{\r\n            if(user !== null){\r\n                let results = await Api.getContactList(user.id);\r\n                setList(results);\r\n            }\r\n        }\r\n        getList();\r\n    },[user])\r\n\r\n    const addNewChat = async(user2) =>{\r\n        await Api.addNewChat(user,user2);\r\n\r\n        handleClose();\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"new-chat\" style={{left:show ? 0 : -415}}>\r\n            <div className=\"new-chat-head\">\r\n                <div onClick={handleClose} className=\"new-chat-back-button\">\r\n                    <ArrowBackIcon style={{color:'#ffffff'}}/>\r\n                </div>\r\n                <div className=\"new-chat-head-title\">Nova Conversa</div>\r\n            </div>\r\n            <div className=\"new-chat-list\">\r\n                {list.map((item, key)=>(\r\n                    <div onClick={()=>addNewChat(item)} className=\"new-chat-item\">\r\n                        <img src={item.avatar} alt=\"\" className=\"new-chat-item-avatar\"/>\r\n                        <div className=\"new-chat-item-name\">{item.name}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport Api from '../Api';\r\nimport './Login.css';\r\n\r\nexport default ({onReceive}) =>{\r\n\r\n    const handleFacebookLogin = async() =>{\r\n        let result = await Api.fbPopup();\r\n        if(result){\r\n            onReceive(result.user);\r\n        }else{\r\n            alert('Error!');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"login\">\r\n            <button onClick={handleFacebookLogin}>Logar com o Facebook</button>\r\n        </div>\r\n    );\r\n};","import React, { useState, useEffect} from 'react';\nimport './App.css';\n\nimport Api from './Api';\n\nimport ChatListItem from './components/ChatListItem';\nimport ChatIntro from './components/ChatIntro';\nimport ChatWindow from './components/ChatWindow';\nimport NewChat from './components/NewChat';\n\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Login from './components/Login';\n\n\n\nexport default ()=>{\n\n\tconst [chatList, setChatList] = useState([]);\n\tconst [activeChat, setActiveChat] = useState({});\n\tconst [user, setUser] = useState(null);\n\n\tuseEffect(()=>{\n\t\tif(user !== null){\n\t\t\tlet unsub = Api.onChatList(user.id, setChatList);\n\t\t\treturn unsub;\n\t\t}\n\t},[user]);\n\n\tconst [showNewChat, setShowNewChat] = useState(false);\n\n\tconst handleNewChat = () =>{\n\t\tsetShowNewChat(true);\n\t}\n\n\tconst handleLoginData = async(u) =>{\n\t\tlet newUser = {\n\t\t\tid: u.uid,\n\t\t\tname: u.displayName,\n\t\t\tavatar: u.photoURL\n\t\t};\n\t\tawait Api.addUser(newUser);\n\t\tsetUser(newUser);\n\t}\n\n\tif(user === null){\n\t\treturn (<Login onReceive={handleLoginData}/>)\n\t}\n\n  \treturn(\n\t\t<div className=\"app-window\">\n\t\t\t<div className=\"side-bar\">\n\t\t\t\t<NewChat\n\t\t\t\t\tchatList={chatList}\n\t\t\t\t\tuser={user}\n\t\t\t\t\tshow={showNewChat}\n\t\t\t\t\tsetShow={setShowNewChat}\n\t\t\t\t/>\n\t\t\t\t<header>\n\t\t\t\t\t<img className=\"header-avatar\" src={user.avatar} alt=\"\"/>\n\t\t\t\t\t<div className=\"header-buttons\">\n\t\t\t\t\t\t<div className=\"header-btn\">\n\t\t\t\t\t\t\t<DonutLargeIcon style={{color:'#919191'}}/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div onClick={handleNewChat} className=\"header-btn\">\n\t\t\t\t\t\t\t<ChatIcon style={{color:'#919191'}}/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"header-btn\">\n\t\t\t\t\t\t\t<MoreVertIcon style={{color:'#919191'}}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t<div className=\"search\">\n\t\t\t\t\t<div className=\"search-input\">\n\t\t\t\t\t\t<SearchIcon fontSize=\"small\" style={{color:'#919191'}} />\n\t\t\t\t\t\t<input type=\"search\" placeholder=\"Procurar ou começar uma nova conversa\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"chat-list\">\n\t\t\t\t\t{chatList.map((item,key)=>(\n\t\t\t\t\t\t<ChatListItem\n\t\t\t\t\t\t\tactive={activeChat.chatId === chatList[key].chatId}\n\t\t\t\t\t\t\tdata={item}\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\tonClick={()=>setActiveChat(chatList[key])}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"content-area\">\n\t\t\t\t{activeChat.chatId !== undefined &&\n\t\t\t\t\t<ChatWindow\n\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\tdata={activeChat}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{activeChat.chatId === undefined &&\n\t\t\t\t\t<ChatIntro/>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n  \t);\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}